{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "40359fcd-bd7e-4306-9bea-67813b47df46",
   "metadata": {},
   "outputs": [],
   "source": [
    "import imagesize\n",
    "import os\n",
    "import numpy as np\n",
    "import collections"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f29434af-bbca-429c-8c33-91b4fc950209",
   "metadata": {},
   "outputs": [],
   "source": [
    "dims = []\n",
    "solo_pics_path = '/home/<your_username>/Pictures/Solo Cat Pictures'\n",
    "print(os.listdir(solo_pics_path))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7fcfe1e7-fd39-45eb-b142-9ef913646d2c",
   "metadata": {},
   "outputs": [],
   "source": [
    "for solo_cat_folder in os.listdir(solo_pics_path):\n",
    "    pics = os.listdir(solo_pics_path + '/' + solo_cat_folder)\n",
    "    for pic in pics:\n",
    "        if pic[-3:] != 'mp4':\n",
    "            width, height = imagesize.get(solo_pics_path + '/' + solo_cat_folder + '/' + pic)\n",
    "            dims.append((solo_cat_folder, height, width))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4c47672f-b9f4-46df-8a47-0899b188ff90",
   "metadata": {},
   "outputs": [],
   "source": [
    "#group dimension sets with counts of each\n",
    "dims_group_counts = collections.Counter(dims)\n",
    "print(dims_group_counts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6f63a15b-289f-459f-9c69-21c23489e8ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "#how many distinct cominations are there?\n",
    "print(len(dims_group_counts))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e13e3571-5e69-4d8d-affe-8862c0ffa204",
   "metadata": {},
   "outputs": [],
   "source": [
    "#22 unique image dimension combos\n",
    "#35 unique combinations of cat and image dimensions\n",
    "#training 35 different CNNS might be the most comprehensive way to work this\n",
    "    #it might be "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
